#!/usr/bin/env bash

shopt -s nullglob

exists() { hash "$@" &>/dev/null; }
require() { exists "$@" || exit 127; }

require wal rofi feh dunst qtile

main() {
    get_args "${@}"

    [[ -z "$imgfile" ]] && interactive

    [[ -z "$imgfile" ]] && usage && die "Expected input"

    [[ ! -f "$imgfile" && ! -d "$imgfile" ]] && die "File doesn't exist owo"

    [[ -d "$imgfile" ]] || ! identify "$imgfile" &>/dev/null && die "$imgfile is not an image >w<"

    if exists pywal-spicetify; then
        color_ini_dir="${HOME}/.config/spicetify/Themes/${spice_theme:-text}"
        [[ ! -d "$color_ini_dir" ]] && die "Theme ${spice_theme} doesn't exist."
        color_ini="$color_ini_dir/color.ini"
        [[ ! -f $color_ini ]] && printf "; This file was generated by cutebg" >>"$color_ini"
        pywal-spicetify text &>/dev/null
    fi
    wal --cols16 "${colortheme:-darken}" -i "$imgfile"
    feh --bg-fill "$imgfile" &>/dev/null
    [[ ! -d "${HOME}/.config/dunst" ]] && mkdir "${HOME}/.config/dunst"
    [[ ! -L "${HOME}/.config/dunst/dunstrc" ]] && ln -s "${HOME}/.cache/wal/dunstrc" "${HOME}/.config/dunst/dunstrc"
    pkill dunst
    exists kvantummanager && apply-theme -s &>/dev/null
    exists oomox-cli && oomox-cli -o pywal "${HOME}/.cache/wal/colors-oomox" -t "$HOME/.local/share/themes" &>/dev/null
    exists pywal-discord && pywal-discord -p "${HOME}/.config/vesktop/themes/" -t default &>/dev/null
    qtile cmd-obj -o cmd -f reload_config
}

usage() {
    cat <<HELP_MSG
    Usage: ${0##*/} [options] image

    Options:
        -h, --help
            Print this message
        -l, --lighten
            Change the method used for generating the 16 colors
        -t, --spice-theme
            Choose the spicetify theme name where the colorscheme will be saved
        -d, --directory
            Directory where wallpapers reside
HELP_MSG
}

die() {
    printf "%s\n" "$1"
    exit 1
}

#get_args() {
#    for opt in "$@"; do
#        shift
#        case "$opt" in
#        "--help") set -- "$@" "-h" ;;
#        "--lighten") set -- "$@" "-l" ;;
#        "--spice-theme") set -- "$@" "-t" ;;
#        "--directory") set -- "$@" "-d" ;;
#        *) set -- "$@" "$opt" ;;
#        esac
#    done
#
#    while getopts ":hlt:d:" opt; do
#        case $opt in
#        h) usage && exit 0 ;;
#        l) colortheme="lighten" ;;
#        t) spice_theme=${OPTARG} ;;
#        d) wal_dir=${OPTARG} ;;
#        :) die "Option -${OPTARG} requires an argument." ;;
#        ?) usage && die "Invalid option: -${OPTARG}." ;;
#        esac
#    done
#    echo $#
#    echo "$OPTIND"
#    shift $((OPTIND - 1))
#    echo $#
#    imgfile="$1"
#}

get_args() {
    pos_args=()

    while (("$#")); do
        local arg=$1
        local val=$2

        case "$arg" in
        -h | --help)
            usage && exit 0
            ;;
        -l | --lighten)
            colortheme="lighten"
            shift
            ;;
        -t | --spice-theme)
            if [[ -n "$val" ]] && [[ "${val:0:1}" != "-" ]]; then
                spice_theme=$val
                shift 2
            else
                die "Option $arg requires an argument."
            fi
            ;;
        -d | --directory)
            if [ "$val" != "" ] && [ "${val:0:1}" != "-" ]; then
                wal_dir=$val
                shift 2
            else
                die "Option $arg requires an argument."
            fi
            ;;
        -*)
            die "Invalid option: $arg"
            ;;
        *)
            pos_args+=("$arg")
            shift
            ;;
        esac
    done

    set -- "${pos_args[@]}"

    imgfile=$1
}

interactive() {
    wal_dir=${wal_dir:-$HOME/Pictures/Wallpapers}
    cache_dir="${HOME}/.cache/cutebg"
    rofi_cmd() { rofi -dmenu -i -show-icons -p "ï€¾  Select Wallpaper"; }
    magick_cmd() {
        cache_fname="$2"
        [[ ! -d "${cache_dir}/${cache_fname%%/*}" ]] && mkdir -p "${cache_dir}/${cache_fname%%/*}"
        cache_f="${cache_dir}/${cache_fname}"
        if [[ ! -f "$cache_f" ]]; then
            magick "$1" -strip -thumbnail 500x500^ -gravity center \
                -extent 500x500 "$cache_f"
        fi
    }

    [[ ! -d "$cache_dir" ]] && mkdir -p "$cache_dir"

    wals=()
    fullpath=()
    for entry in "$wal_dir"/*; do
        if [[ -d "$entry" ]]; then
            group="${entry##*/}"
            for file in "$entry"/*; do
                img="${group}/${file##*/}"
                wals+=("$img")
                fullpath+=("$file")
                magick_cmd "$file" "$img"
            done
        else
            img="${entry##*/}"
            wals+=("$img")
            fullpath+=("$entry")
            magick_cmd "$entry" "$img"
        fi
    done

    imgfile="${wal_dir}/$(
        for image in "${wals[@]}"; do
            printf "%s\x00icon\x1f%s\n" "$image" "${cache_dir}/${image}"
        done | rofi_cmd
    )"
}

main "${@}"

#!/usr/bin/env bash

exists() { hash "$@" &>/dev/null; }
require() { exists "$@" || exit 127; }

require wal rofi feh dunst qtile

main() {
    get_args "${@}"

    [[ "$#" == 0 ]] && interactive

    [[ -z "$imgfile" ]] && usage && die "Expected input"

    [[ ! -f "$imgfile" && ! -d "$imgfile" ]] && die "File doesn't exist owo"

    [[ -d "$imgfile" ]] || ! identify "$imgfile" &>/dev/null && die "$imgfile is not an image >w<"

    if exists pywal-spicetify; then
        color_ini_dir="${HOME}/.config/spicetify/Themes/${spice_theme:-text}"
        [[ ! -d "$color_ini_dir" ]] && die "Theme ${spice_theme} doesn't exist."
        color_ini="$color_ini_dir/color.ini"
        [[ ! -f $color_ini ]] && printf "; This file was generated by cutebg" >>"$color_ini"
        pywal-spicetify text &>/dev/null
    fi
    wal --cols16 "${colortheme:-darken}" -i "$imgfile"
    feh --bg-fill "$imgfile" &>/dev/null
    [[ ! -d "${HOME}/.config/dunst" ]] && mkdir "${HOME}/.config/dunst"
    [[ ! -L "${HOME}/.config/dunst/dunstrc" ]] && ln -s "${HOME}/.cache/wal/dunstrc" "${HOME}/.config/dunst/dunstrc"
    pkill dunst
    exists kvantummanager && apply-theme -s &>/dev/null
    exists oomox-cli && oomox-cli -o pywal "${HOME}/.cache/wal/colors-oomox" -t "$HOME/.local/share/themes" &>/dev/null
    exists pywal-discord && pywal-discord -p "${HOME}/.config/vesktop/themes/" -t default &>/dev/null
    qtile cmd-obj -o cmd -f reload_config
}

usage() {
    cat <<HELP_MSG
    Usage: ${0##*/} [options] image

    Options:
        -h, --help
            Print this message
        -l, --lighten
            Change the method used for generating the 16 colors
        -t, --spice-theme
            Choose the spicetify theme name where the colorscheme will be saved
        -d, --directory
            Directory where wallpapers reside
HELP_MSG
}

die() {
    printf "%s\n" "$1"
    exit 1
}

get_args() {
    for opt in "$@"; do
        shift
        case "$opt" in
        "--help") set -- "$@" "-h" ;;
        "--lighten") set -- "$@" "-l" ;;
        "--spice-theme") set -- "$@" "-t" ;;
        "--directory") set -- "$@" "-d" ;;
        *) set -- "$@" "$opt" ;;
        esac
    done

    OPTIND=1
    while getopts ":hlt:d:" opt; do
        case $opt in
        h) usage && exit 0 ;;
        l) colortheme="lighten" && shift ;;
        t) spice_theme=$OPTARG && shift ;;
        d) wal_dir=$OPTARG && shift ;;
        ?) usage && die "Invalid option: -${OPTARG}." ;;
        esac
    done
    imgfile="$1"
}

interactive() {
    wal_dir=${wal_dir:-$HOME/Pictures/Wallpapers}

    wals=()
    for entry in "$wal_dir"/*; do
        if [[ -d "$entry" ]]; then
            group="${entry##*/}"
            for file in "$entry"/*; do
                wals+=("${group}/${file##*/}")
            done
        else
            wals+=("${entry##*/}")
        fi
    done

    printf '%s' "${wal_dir}/${wals[@]}"
    #for image in "${wal_dir}/${wals[@]}"; do printf '%s\n' "$image"; done
    #echo -en "$image\0icon\x1f$image\n"; done | rofi -i -dmenu -show-icons
}

main "${@}"
